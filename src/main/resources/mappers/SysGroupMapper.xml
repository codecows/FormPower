<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.dao.mappers.SysGroupMapper">
    <resultMap id="BaseResultMap" type="app.dao.entities.SysGroup">
        <id column="group_id" jdbcType="VARCHAR" property="groupId"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="order_num" jdbcType="NUMERIC" property="orderNum"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        group_id, parent_id, group_name, remark, order_num, status, create_date
    </sql>
    <select id="selectByExample" parameterType="app.dao.entities.SysGroupExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_group
        where group_id = #{groupId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from sys_group
        where group_id = #{groupId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="app.dao.entities.SysGroupExample">
        delete from sys_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="app.dao.entities.SysGroup">
        insert into sys_group (group_id, parent_id, group_name,
        remark, order_num, status,
        create_date)
        values (#{groupId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{orderNum,jdbcType=NUMERIC}, #{status,jdbcType=VARCHAR},
        #{createDate,jdbcType=DATE})
    </insert>
    <insert id="insertSelective" parameterType="app.dao.entities.SysGroup">
        insert into sys_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="groupId != null">
                group_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="groupName != null">
                group_name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="groupId != null">
                #{groupId,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="groupName != null">
                #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=NUMERIC},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="app.dao.entities.SysGroupExample" resultType="java.lang.Long">
        select count(*) from sys_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_group
        <set>
            <if test="record.groupId != null">
                group_id = #{record.groupId,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=VARCHAR},
            </if>
            <if test="record.groupName != null">
                group_name = #{record.groupName,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.orderNum != null">
                order_num = #{record.orderNum,jdbcType=NUMERIC},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_group
        set group_id = #{record.groupId,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=VARCHAR},
        group_name = #{record.groupName,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        order_num = #{record.orderNum,jdbcType=NUMERIC},
        status = #{record.status,jdbcType=VARCHAR},
        create_date = #{record.createDate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="app.dao.entities.SysGroup">
        update sys_group
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="groupName != null">
                group_name = #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=NUMERIC},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=DATE},
            </if>
        </set>
        where group_id = #{groupId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="app.dao.entities.SysGroup">
        update sys_group
        set parent_id = #{parentId,jdbcType=VARCHAR},
        group_name = #{groupName,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        order_num = #{orderNum,jdbcType=NUMERIC},
        status = #{status,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=DATE}
        where group_id = #{groupId,jdbcType=VARCHAR}
    </update>
</mapper>