<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.dao.mappers.SysDepartmentMapper">
  <resultMap id="BaseResultMap" type="app.dao.entities.SysDepartment">
    <id column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
    <result column="department_level" jdbcType="VARCHAR" property="departmentLevel" />
    <result column="department_type" jdbcType="VARCHAR" property="departmentType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="order_num" jdbcType="NUMERIC" property="orderNum" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    department_id, parent_id, department_name, short_name, department_code, department_level, 
    department_type, remark, order_num, status, create_date
  </sql>
  <select id="selectByExample" parameterType="app.dao.entities.SysDepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_department
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_department
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="app.dao.entities.SysDepartmentExample">
    delete from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="app.dao.entities.SysDepartment">
    insert into sys_department (department_id, parent_id, department_name, 
      short_name, department_code, department_level, 
      department_type, remark, order_num, 
      status, create_date)
    values (#{departmentId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{departmentName,jdbcType=VARCHAR}, 
      #{shortName,jdbcType=VARCHAR}, #{departmentCode,jdbcType=VARCHAR}, #{departmentLevel,jdbcType=VARCHAR}, 
      #{departmentType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{orderNum,jdbcType=NUMERIC}, 
      #{status,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="app.dao.entities.SysDepartment">
    insert into sys_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="departmentCode != null">
        department_code,
      </if>
      <if test="departmentLevel != null">
        department_level,
      </if>
      <if test="departmentType != null">
        department_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentLevel != null">
        #{departmentLevel,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null">
        #{departmentType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=NUMERIC},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="app.dao.entities.SysDepartmentExample" resultType="java.lang.Long">
    select count(*) from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_department
    <set>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentName != null">
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentCode != null">
        department_code = #{record.departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentLevel != null">
        department_level = #{record.departmentLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentType != null">
        department_type = #{record.departmentType,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=NUMERIC},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_department
    set department_id = #{record.departmentId,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      department_name = #{record.departmentName,jdbcType=VARCHAR},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      department_code = #{record.departmentCode,jdbcType=VARCHAR},
      department_level = #{record.departmentLevel,jdbcType=VARCHAR},
      department_type = #{record.departmentType,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=NUMERIC},
      status = #{record.status,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="app.dao.entities.SysDepartment">
    update sys_department
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        department_code = #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentLevel != null">
        department_level = #{departmentLevel,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null">
        department_type = #{departmentType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=NUMERIC},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
    </set>
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="app.dao.entities.SysDepartment">
    update sys_department
    set parent_id = #{parentId,jdbcType=VARCHAR},
      department_name = #{departmentName,jdbcType=VARCHAR},
      short_name = #{shortName,jdbcType=VARCHAR},
      department_code = #{departmentCode,jdbcType=VARCHAR},
      department_level = #{departmentLevel,jdbcType=VARCHAR},
      department_type = #{departmentType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=NUMERIC},
      status = #{status,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE}
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </update>
</mapper>